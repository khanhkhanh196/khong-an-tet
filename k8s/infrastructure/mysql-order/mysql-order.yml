apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: password
          volumeMounts:
            - name: mysql-initdb
              mountPath: /docker-entrypoint-initdb.d
            - mountPath: "/var/lib/mysql"
              subPath: "mysql"
              name: mysql-data
      volumes:
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-data-disk
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
data:
  init.sql: |
    CREATE DATABASE IF NOT EXISTS hb-order;
    USE hb-order;
    create table `order` (
    `order_id` int not null auto_increment,
    `cart_id` int,
    `short_desc` nvarchar(100) default null,
    `is_paid` boolean default null,
    `total_price` double default null,

    primary key (`order_id`)
    ) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4;
      INSERT INTO friends VALUES (1, 1, 'Abhijeet', false, 200.00);

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data-disk
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secrets
type: kubernetes.io/basic-auth
stringData:
  password: "123456"
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
   - name: "3306"
     port: 3306
     targetPort: 3306
  selector:
    app: mysql